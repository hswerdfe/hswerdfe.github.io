[
  {
    "path": "posts/tt_2021-03-02/",
    "title": "Clustering of Tidy Tuesday Superbowl ads",
    "description": "A new post by hswerdfe",
    "author": [
      {
        "name": "Howard Swerdfeger",
        "url": "https://hswerdfe.github.io/docs/"
      }
    ],
    "date": "2021-04-09",
    "categories": [],
    "contents": "\r\nload libraries\r\n\r\n\r\nlibrary(tidyverse)\r\nlibrary(plotly)\r\nlibrary(skimr)\r\nlibrary(snakecase)\r\nlibrary(janitor)\r\nlibrary(broom)\r\nlibrary(plotly)\r\nlibrary(htmlwidgets)\r\nlibrary(DT)\r\n\r\n#set the theme\r\ntheme_set(theme_minimal())\r\n\r\n\r\n\r\nRead in the data\r\nRead in and look at the data\r\n\r\n\r\nsb_raw <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-03-02/youtube.csv')\r\nskimr::skim(sb_raw)\r\n\r\n\r\nTable 1: Data summary\r\nName\r\nsb_raw\r\nNumber of rows\r\n247\r\nNumber of columns\r\n25\r\n_______________________\r\n\r\nColumn type frequency:\r\n\r\ncharacter\r\n10\r\nlogical\r\n7\r\nnumeric\r\n7\r\nPOSIXct\r\n1\r\n________________________\r\n\r\nGroup variables\r\nNone\r\nVariable type: character\r\nskim_variable\r\nn_missing\r\ncomplete_rate\r\nmin\r\nmax\r\nempty\r\nn_unique\r\nwhitespace\r\nbrand\r\n0\r\n1.00\r\n3\r\n9\r\n0\r\n10\r\n0\r\nsuperbowl_ads_dot_com_url\r\n0\r\n1.00\r\n34\r\n120\r\n0\r\n244\r\n0\r\nyoutube_url\r\n11\r\n0.96\r\n43\r\n43\r\n0\r\n233\r\n0\r\nid\r\n11\r\n0.96\r\n11\r\n11\r\n0\r\n233\r\n0\r\nkind\r\n16\r\n0.94\r\n13\r\n13\r\n0\r\n1\r\n0\r\netag\r\n16\r\n0.94\r\n27\r\n27\r\n0\r\n228\r\n0\r\ntitle\r\n16\r\n0.94\r\n6\r\n99\r\n0\r\n228\r\n0\r\ndescription\r\n50\r\n0.80\r\n3\r\n3527\r\n0\r\n194\r\n0\r\nthumbnail\r\n129\r\n0.48\r\n48\r\n48\r\n0\r\n118\r\n0\r\nchannel_title\r\n16\r\n0.94\r\n3\r\n37\r\n0\r\n185\r\n0\r\nVariable type: logical\r\nskim_variable\r\nn_missing\r\ncomplete_rate\r\nmean\r\ncount\r\nfunny\r\n0\r\n1\r\n0.69\r\nTRU: 171, FAL: 76\r\nshow_product_quickly\r\n0\r\n1\r\n0.68\r\nTRU: 169, FAL: 78\r\npatriotic\r\n0\r\n1\r\n0.17\r\nFAL: 206, TRU: 41\r\ncelebrity\r\n0\r\n1\r\n0.29\r\nFAL: 176, TRU: 71\r\ndanger\r\n0\r\n1\r\n0.30\r\nFAL: 172, TRU: 75\r\nanimals\r\n0\r\n1\r\n0.37\r\nFAL: 155, TRU: 92\r\nuse_sex\r\n0\r\n1\r\n0.27\r\nFAL: 181, TRU: 66\r\nVariable type: numeric\r\nskim_variable\r\nn_missing\r\ncomplete_rate\r\nmean\r\nsd\r\np0\r\np25\r\np50\r\np75\r\np100\r\nhist\r\nyear\r\n0\r\n1.00\r\n2010.19\r\n5.86\r\n2000\r\n2005\r\n2010\r\n2015.00\r\n2020\r\n▇▇▇▇▆\r\nview_count\r\n16\r\n0.94\r\n1407556.46\r\n11971111.01\r\n10\r\n6431\r\n41379\r\n170015.50\r\n176373378\r\n▇▁▁▁▁\r\nlike_count\r\n22\r\n0.91\r\n4146.03\r\n23920.40\r\n0\r\n19\r\n130\r\n527.00\r\n275362\r\n▇▁▁▁▁\r\ndislike_count\r\n22\r\n0.91\r\n833.54\r\n6948.52\r\n0\r\n1\r\n7\r\n24.00\r\n92990\r\n▇▁▁▁▁\r\nfavorite_count\r\n16\r\n0.94\r\n0.00\r\n0.00\r\n0\r\n0\r\n0\r\n0.00\r\n0\r\n▁▁▇▁▁\r\ncomment_count\r\n25\r\n0.90\r\n188.64\r\n986.46\r\n0\r\n1\r\n10\r\n50.75\r\n9190\r\n▇▁▁▁▁\r\ncategory_id\r\n16\r\n0.94\r\n19.32\r\n8.00\r\n1\r\n17\r\n23\r\n24.00\r\n29\r\n▃▁▂▆▇\r\nVariable type: POSIXct\r\nskim_variable\r\nn_missing\r\ncomplete_rate\r\nmin\r\nmax\r\nmedian\r\nn_unique\r\npublished_at\r\n16\r\n0.94\r\n2006-02-06 10:02:36\r\n2021-01-27 13:11:29\r\n2013-01-31 09:13:55\r\n227\r\n\r\ndat_ref <- \"data from https://github.com/fivethirtyeight/superbowl-ads, via tidy tuesday\"\r\n\r\n\r\n\r\nlook at the data\r\n\r\n\r\nsb_raw %>% sample_n(10)\r\n\r\n\r\n# A tibble: 10 x 25\r\n    year brand  superbowl_ads_dot~ youtube_url  funny show_product_qu~\r\n   <dbl> <chr>  <chr>              <chr>        <lgl> <lgl>           \r\n 1  2007 Budwe~ https://superbowl~ https://www~ TRUE  TRUE            \r\n 2  2015 Budwe~ https://superbowl~ https://www~ FALSE TRUE            \r\n 3  2004 Bud L~ https://superbowl~ https://www~ TRUE  TRUE            \r\n 4  2006 Bud L~ https://superbowl~ https://www~ TRUE  FALSE           \r\n 5  2000 Budwe~ https://superbowl~ https://www~ TRUE  TRUE            \r\n 6  2009 Dorit~ https://superbowl~ https://www~ TRUE  TRUE            \r\n 7  2019 Kia    https://superbowl~ https://www~ FALSE FALSE           \r\n 8  2013 Budwe~ https://superbowl~ https://www~ FALSE TRUE            \r\n 9  2014 Coca-~ https://superbowl~ https://www~ FALSE TRUE            \r\n10  2009 Coca-~ https://superbowl~ https://www~ TRUE  TRUE            \r\n# ... with 19 more variables: patriotic <lgl>, celebrity <lgl>,\r\n#   danger <lgl>, animals <lgl>, use_sex <lgl>, id <chr>, kind <chr>,\r\n#   etag <chr>, view_count <dbl>, like_count <dbl>,\r\n#   dislike_count <dbl>, favorite_count <dbl>, comment_count <dbl>,\r\n#   published_at <dttm>, title <chr>, description <chr>,\r\n#   thumbnail <chr>, channel_title <chr>, category_id <dbl>\r\n\r\nclean the data a little bit\r\n\r\n\r\ndat <- \r\n  sb_raw %>% \r\n  mutate_if(is.character, snakecase::to_sentence_case) %>% \r\n  select(-favorite_count, -youtube_url) %>%\r\n  bind_cols(sb_raw[\"youtube_url\"],. ) %>%\r\n  rename(key = youtube_url)\r\n \r\n\r\ndat %>% colnames()\r\n\r\n\r\n [1] \"key\"                       \"year\"                     \r\n [3] \"brand\"                     \"superbowl_ads_dot_com_url\"\r\n [5] \"funny\"                     \"show_product_quickly\"     \r\n [7] \"patriotic\"                 \"celebrity\"                \r\n [9] \"danger\"                    \"animals\"                  \r\n[11] \"use_sex\"                   \"id\"                       \r\n[13] \"kind\"                      \"etag\"                     \r\n[15] \"view_count\"                \"like_count\"               \r\n[17] \"dislike_count\"             \"comment_count\"            \r\n[19] \"published_at\"              \"title\"                    \r\n[21] \"description\"               \"thumbnail\"                \r\n[23] \"channel_title\"             \"category_id\"              \r\n\r\nElbo method of guessing at clusters\r\n\r\n\r\ndat_4_clust <- \r\n  dat %>% \r\n  mutate_if(is.numeric, function(x){(x+1) %>% log10() %>%  scale() }) %>% \r\n  drop_na()\r\n\r\ndat_4_clust_2 <- \r\n  dat_4_clust %>% \r\n  select_if(function(x){is.logical(x) | is.numeric(x)})%>%\r\n  bind_cols(dat_4_clust[\"key\"],.) %>% \r\n  drop_na()\r\n\r\n\r\nkclusts <-\r\n  tibble(k = 1:12) %>%\r\n  mutate(\r\n    kclust = map(k, function(x){kmeans(x = select(dat_4_clust_2, -key), centers = x)})) %>% \r\n  mutate(glanced = map(kclust, glance))\r\n\r\n\r\nkclusts %>%\r\n  unnest(cols = c(glanced)) %>%\r\n  ggplot(aes(k, tot.withinss)) +\r\n  geom_line(alpha = 0.5, size = 1.2) +\r\n  geom_point(size = 2) + \r\n  labs(caption = dat_ref , title = \"Guess at cluster count via elbo method\", y = \"Total Withiness\", x = \"number of clusters\")\r\n\r\n\r\n\r\n\r\n\r\n\r\n#best cluster ???\r\nfinal_clust <- kmeans(select(dat_4_clust_2, -key), centers = 7)\r\n\r\n\r\np <-\r\n  augment(final_clust, dat_4_clust_2) %>%\r\n  left_join(dat %>% select(brand, key), by = \"key\") %>% \r\n  ggplot(aes(dislike_count, like_count, fill = .cluster, name = brand)) +\r\n  geom_point(aes(size = view_count), shape = 21, color = \"black\") +\r\n  geom_text(aes(label  = brand), check_overlap = TRUE, hjust = \"right\") +\r\n  guides( fill = \"none\") + \r\n  labs(title = \"Clustering of NFL commercials\", y = \"likes (normalized)\", x = \"dislikes (normalized)\", \r\n       size = \"views (normalized)\",\r\n       caption = dat_ref )\r\n\r\np\r\n\r\n\r\n\r\n#pp <- ggplotly(p)\r\n#pp\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2021-04-09T07:18:10-04:00",
    "input_file": "tt_2021-03-02.utf8.md"
  },
  {
    "path": "posts/mice_dates_2021-04-09/",
    "title": "Mice for Imputation of Observations With Consecutive Related Dates",
    "description": "A new post by hswerdfe",
    "author": [
      {
        "name": "Howard Swerdfeger",
        "url": "https://hswerdfe.github.io/docs/"
      }
    ],
    "date": "2021-04-09",
    "categories": [],
    "contents": "\r\nMotivation\r\nDataset with all of the following properties:\r\nObservations with many dates which are near each other\r\nMany cells with missing data\r\nBias in how the cells data are missing\r\nThink of a dataset with some of these as dates:\r\nInfection Date\r\nLab Test Date\r\nLab Result Date\r\nOnset Date\r\nReported Date\r\nRecovery Date\r\nLoad Libraries\r\nFirst load the libraries needed, mice is the library that actually does the imputation, while ambient is for creating a realistic looking fake dataset using perlin noise, and lemon is just for outputing tables.\r\n\r\n\r\nlibrary(tidyverse) # data manipulation\r\nlibrary(lubridate) # dates \r\nlibrary(mice) # imputation\r\nlibrary(ambient) # perlin noise\r\nlibrary(lemon) # for table output\r\nlibrary(ggpubr) #for ggarrange\r\nknit_print.data.frame <- lemon_print\r\ntheme_set(theme_minimal())\r\n\r\nset.seed(as.integer(as.Date(\"2021-04-09\")))\r\n\r\n\r\n\r\nMake some utility functions\r\nThese two function noise_perlin_1D_pos and sample_perlin are just used to help make the sample dataset we need, with dates that are missing but not missing at random.\r\n\r\n\r\n#'\r\n#' Returns 1D perlin Noise, and that noise is always above zero, vector length is size\r\n#'\r\nnoise_perlin_1D_pos<- function(size, frequency = 0.007, ...){\r\n  pn <- noise_perlin(c(size, 1), frequency = frequency, ...)[,1]\r\n  pn - min(pn)  \r\n}\r\n\r\n\r\n\r\n\r\n\r\n#' like base sample\r\n#' samples from x size times, with prob given by prob, which defaults to perlin noise\r\nsample_perlin <- function(x, size, replace = FALSE, ...,   \r\n                          prob = noise_perlin_1D_pos(length(x), ...)){\r\n  sample(x = x, size = size, prob = prob, replace = replace)\r\n}\r\n\r\n\r\n\r\nCreate Sample dataset\r\nSingle time series\r\nCreate a single timeseries, that serves a the basis for the rest of the dataset.\r\n\r\n\r\nn_rec = 10000\r\ns_dt = as.Date(\"2020-01-01\")\r\ne_dt = as.Date(\"2021-01-01\")\r\ndt_a <- sample_perlin(s_dt:e_dt, n_rec, replace = TRUE, frequency = 0.007) %>% as.Date(origin = as.Date(\"1970-01-01\")) %>% sort(\r\n  \r\n)\r\n\r\n\r\ntibble(dt_a) %>% \r\n  ggplot(aes(x = dt_a)) +\r\n  geom_density(color = \"red\", size = 1.5) +\r\n  labs(title = \"Density Plot of a base time series\", x = \"\", y = \"\")\r\n\r\n\r\n\r\n\r\nOther Time series\r\nAll other timeseries are base on the initial timeseries. We add factors in, but we don’t really use them.\r\n\r\n\r\ndate_b <- dt_a + runif(n = n_rec, -7, +2) %>% round()\r\ndate_c <- dt_a + runif(n = n_rec, -2, +7)%>% round()\r\ndate_d <- dt_a + runif(n = n_rec, -7, +7)%>% round()\r\ndate_e <- dt_a + runif(n = n_rec, -2, +2)%>% round()\r\ndate_f <- dt_a + runif(n = n_rec, +2, +12)%>% round()\r\nfactor_a <- sample(c(\"a\",\"b\",\"c\",\"d\"), n_rec, replace = TRUE)\r\nfactor_b <- sample(c(\"z\",\"y\",\"x\",\"w\"), n_rec, replace = TRUE)\r\n\r\n\r\n\r\ndat_full <- \r\n  tibble(\r\n    date_b, date_c, date_d, date_e, date_f, factor_a, factor_b\r\n  ) %>% \r\n  mutate(date_min = pmin(date_b, date_d, date_e, na.rm = TRUE)) %>% \r\n  mutate(date_max = pmax(date_b, date_d, date_e, na.rm = TRUE)) %>% \r\n  mutate(date_b = as.character(date_b))\r\n\r\ndat_full %>% sample_n(7)\r\n\r\n\r\nTable 1: Observations Dates are always close to each other.\r\ndate_b\r\ndate_c\r\ndate_d\r\ndate_e\r\ndate_f\r\nfactor_a\r\nfactor_b\r\ndate_min\r\ndate_max\r\n2020-06-03\r\n2020-06-08\r\n2020-06-09\r\n2020-06-03\r\n2020-06-12\r\na\r\ny\r\n2020-06-03\r\n2020-06-09\r\n2019-12-30\r\n2020-01-06\r\n2020-01-05\r\n2020-01-01\r\n2020-01-09\r\nc\r\nx\r\n2019-12-30\r\n2020-01-05\r\n2020-04-17\r\n2020-04-23\r\n2020-04-25\r\n2020-04-19\r\n2020-04-29\r\nc\r\nz\r\n2020-04-17\r\n2020-04-25\r\n2020-05-17\r\n2020-05-26\r\n2020-05-23\r\n2020-05-24\r\n2020-06-02\r\na\r\ny\r\n2020-05-17\r\n2020-05-24\r\n2020-06-05\r\n2020-06-05\r\n2020-06-06\r\n2020-06-03\r\n2020-06-08\r\nb\r\ny\r\n2020-06-03\r\n2020-06-06\r\n2020-09-08\r\n2020-09-13\r\n2020-09-03\r\n2020-09-09\r\n2020-09-20\r\nc\r\nx\r\n2020-09-03\r\n2020-09-09\r\n2020-06-27\r\n2020-06-30\r\n2020-06-26\r\n2020-06-25\r\n2020-07-07\r\nd\r\nw\r\n2020-06-25\r\n2020-06-27\r\n\r\nRemove some values\r\n\r\n\r\nremove_noise <- noise_perlin_1D_pos(n_rec, pertubation = 'fractal',  frequency = 0.0001) \r\n\r\n\r\nremove_noise %>% \r\n  tibble(value = ., index = 1:length(.)) %>%\r\n  ggplot(aes(y = value, x = index)) + geom_line(color = \"blue\", size = 1.5) +\r\n  theme_void() + \r\n  labs(title = \"Probability density of cell being removed\")\r\n\r\n\r\n\r\n\r\nRandomly remove some values, but importantly the removal is not uniform across the whole dataset.\r\nHere the number removed is related to size for example date_b has about 1/3rd of its values removed.\r\n\r\n\r\ndate_b[sample(x = 1:n_rec, size = n_rec/3, prob = remove_noise)] <- NA\r\ndate_c[sample(x = 1:n_rec, size = n_rec/2, prob = remove_noise)] <- NA\r\ndate_d[sample(x = 1:n_rec, size = n_rec/5, prob = remove_noise)] <- NA\r\ndate_e[sample(x = 1:n_rec, size = n_rec/1.5, prob = remove_noise)] <- NA\r\ndate_f[sample(x = 1:n_rec, size = n_rec/5, prob = remove_noise)] <- NA\r\nfactor_a[sample(x = 1:n_rec, size = n_rec/3, prob = remove_noise)] <- NA\r\nfactor_b[sample(x = 1:n_rec, size = n_rec/3, prob = remove_noise)] <- NA\r\n\r\ndat <- \r\n  tibble(\r\n    date_b, date_c, date_d, date_e, date_f, factor_a, factor_b\r\n  ) %>% \r\n  mutate(date_min = pmin(date_b, date_d, date_e, na.rm = TRUE)) %>% \r\n  mutate(date_max = pmax(date_b, date_d, date_e, na.rm = TRUE)) %>% \r\n  mutate(date_b = as.character(date_b))\r\n\r\ndat %>% sample_n(7)\r\n\r\n\r\nTable 2: Some cells are hidden or set to NA.\r\ndate_b\r\ndate_c\r\ndate_d\r\ndate_e\r\ndate_f\r\nfactor_a\r\nfactor_b\r\ndate_min\r\ndate_max\r\nNA\r\n2020-05-08\r\n2020-05-15\r\n2020-05-08\r\n2020-05-15\r\nNA\r\ny\r\n2020-05-08\r\n2020-05-15\r\n2020-08-25\r\n2020-08-31\r\n2020-09-04\r\n2020-08-30\r\n2020-09-04\r\nd\r\nNA\r\n2020-08-25\r\n2020-09-04\r\n2020-06-30\r\n2020-07-04\r\n2020-07-05\r\n2020-06-28\r\n2020-07-02\r\nb\r\nz\r\n2020-06-28\r\n2020-07-05\r\nNA\r\n2020-06-23\r\n2020-06-23\r\n2020-06-14\r\n2020-06-19\r\nNA\r\nw\r\n2020-06-14\r\n2020-06-23\r\nNA\r\nNA\r\n2020-01-03\r\nNA\r\nNA\r\nNA\r\nNA\r\n2020-01-03\r\n2020-01-03\r\n2020-07-13\r\n2020-07-17\r\n2020-07-23\r\n2020-07-20\r\nNA\r\nd\r\nw\r\n2020-07-13\r\n2020-07-23\r\nNA\r\n2020-01-19\r\n2020-01-19\r\nNA\r\nNA\r\nNA\r\nNA\r\n2020-01-19\r\n2020-01-19\r\n\r\nCompare missing with full data\r\nThen compare the full dataset to the dataset with values removed. Note how badly some of the timeseries are represented, with the removed data. One of the worst is date_e. This is mainly because we removed 2/3rds of the values.\r\n\r\n\r\nbind_rows(\r\ndat %>% mutate(full = \"Some Dates Removed\"),\r\ndat_full %>% mutate(full = \"Full Dataset\")\r\n) %>%\r\n  mutate_at(vars(matches(\"date\")), as.Date) %>% \r\n  select(matches(\"date\"), full) %>% \r\n  pivot_longer(cols = matches(\"date\")) %>% \r\n  count(full, name, value) %>%\r\n  filter(!is.na(value)) %>% \r\n  ggplot(aes(x = value, y = n, color = full)) + geom_line() + facet_wrap(vars(name)) + \r\n  labs(title = \"Example Dataset\", subtitle = \"some dates are removed\", y = \"Count of Data\", x = \"\", color = \"\") +\r\n  theme(legend.position=\"bottom\")\r\n\r\n\r\n\r\n\r\nDifference Between Dates\r\nOne thing we rely on is that the distribution of differences between the days is relatively consistent when data is removed, we can see that this is still the case.\r\nIf you have strong reason to suspect this is not the case, consider eliminating that date from the prediction.\r\n\r\n\r\nbind_rows(\r\ndat %>% mutate(full = \"With Missing Data\"),\r\ndat_full %>% mutate(full = \"Full Dataset\")\r\n) %>% \r\n  mutate(delta_e_c = date_c- date_e) %>%\r\n  ggplot(aes(x = delta_e_c, fill = full)) + geom_density(alpha = 0.5) + facet_grid(rows = vars(full)) +guides(fill = FALSE) + \r\n  labs(x = \"Days between Dates `e` and and `c`\")\r\n\r\n\r\n\r\n\r\nMain Imputation Function\r\nNext is the main function to restore the data in a target date column. What this does:\r\nwhere it can it shows finds the difference between the target date and all other dates\r\nuse mice to fill in the missing deltas to the target\r\ncalculate the target where needed using new deltas and helper dates\r\nI experimented a little with both my dataset and this fake data and found that predicting via mice on the delta of the dates seems to produce more reasonable answers then predicting the actual number via mice as often it seems a few dates will be way off with predicting mice on the dates directly. even if the dates are normalized.\r\nBut I did no formal experiment. This was just my intuition, as these were my first two attempts and they did not have accurate results.\r\n\r\n\r\n#'\r\n#' Uses Mice to predict the delta between 'other dates' and target date.\r\n#' When the 'target date' is missing estimate it from 'other dates'\r\n#' Then takes average of predictions of 'target dates', and returns a vector of 'target dates' \r\n#' with all data filled in....\r\n#' \r\n#' This method is useful when you have data with many dates\r\n#' \r\n#'\r\nfill_summarize_date_data <- function(\r\n                      dat,\r\n                      post_grouping_nm,\r\n                      predict_col_nm,\r\n                      col_dt_match_ptrn =\"date\",\r\n                      m = 3,\r\n                      maxit = 50,\r\n                      remove.collinear = FALSE, \r\n                      dt_origin_INTERNAL = as.Date(\"1970-01-01\"),\r\n                      simplify = TRUE,\r\n                      ...\r\n                    ){\r\n  n_rec = nrow(dat)\r\n         \r\n  #Get just date columns             \r\n  dat_dt <- \r\n    dat %>% \r\n    select(matches(col_dt_match_ptrn)) %>%  \r\n    mutate_all(as.Date) %>%  \r\n    mutate_all(as.integer) \r\n  \r\n  \r\n  \r\n  pd_to = dat_dt[[predict_col_nm]]\r\n  pd_from = dat_dt %>% select(-all_of(predict_col_nm))\r\n  pd_from_mat <- as.matrix(pd_from)\r\n  \r\n  \r\n  #do Mice on the deltas between columns\r\n  detlta_dt_mice <- \r\n  map_dfc(colnames(pd_from), function(nm){\r\n    pd_from[[nm]] - pd_to\r\n  }) %>% set_names(colnames(pd_from)) %>% \r\n    mice(m = m, maxit = maxit,remove.collinear=remove.collinear, ...)\r\n  \r\n  \r\n  #ge a bunch of predictions \r\n  dat_comp <- \r\n    map_dfc(1:m, function(im){\r\n      \r\n      #get ith prediction\r\n      tmp <- complete(detlta_dt_mice, im) %>% as_tibble()\r\n      \r\n\r\n      #in every helper column predict the target column when needed\r\n      #from the value and the delta\r\n      map_dfc(colnames(tmp), function(nm){\r\n        from_x = pd_from[[nm]]\r\n        dx = tmp[[nm]]\r\n        ifelse(is.na(pd_to),\r\n               from_x - dx,\r\n               pd_to\r\n        )\r\n        \r\n        \r\n      }) %>% setNames(colnames(tmp)) %>%\r\n        mutate(., key = 1:nrow(.)) %>% \r\n        pivot_longer(., cols = matches(col_dt_match_ptrn)) %>%\r\n        group_by(key) %>%\r\n        summarise(value = mean(value, na.rm = TRUE)) %>%\r\n        pull(value) %>%\r\n        as.Date(origin = dt_origin_INTERNAL)\r\n    }) %>% set_names(paste0(\"n_\", 1:m)) %>%\r\n    bind_cols(dat[predict_col_nm])\r\n  \r\n  \r\n    #strip out other stuff and just return one vector averaging all the predicted dates  \r\n    dat_comp %>%\r\n      mutate(., tmp_key = 1:nrow(.)) %>% \r\n      pivot_longer(., cols = starts_with(\"n_\")) %>%\r\n      group_by(tmp_key) %>%\r\n      summarise(value = mean(value, na.rm = TRUE)) %>%\r\n      ungroup() %>% \r\n      pull(value) %>% round() #%>% class()\r\n}\r\n\r\n\r\n\r\nImputation (Prediction)\r\nNext do the prediction, important values are m and maxit which are both passed to mice. if you are interested in the individual entries I recommend increasing maxit and possibly m, at the cost of run time.\r\nHowever, if you are going to group by and count then a lower number for maxit is fine.\r\n\r\n\r\ndat_guess <- \r\n  dat %>% \r\n  mutate(., date_e_guess = fill_summarize_date_data(., \r\n                          predict_col_nm = \"date_e\", \r\n                          col_dt_match_ptrn =\"date\",\r\n                          m = 5, \r\n                          maxit = 100)\r\n                          )# %>% sample_n(20)\r\n\r\n\r\n\r\nNote:\r\ndate_e_guess is fully filled out while date_e is till missing some dates\r\ndate_e and date_e_guess are the same when they can be\r\ndate_e_guess seems reasonable given the other dates in the observations.\r\n\r\n\r\nbind_cols(\r\ndat_full %>% select(date_e),\r\ndat_guess %>% select(date_e, date_e_guess) %>% rename(date_e_missing := date_e)\r\n)%>% \r\n  mutate(guess_delta = date_e - date_e_guess) %>% \r\n  sample_n(10)\r\n\r\n\r\nTable 3: New column date_e_guess.\r\ndate_e\r\ndate_e_missing\r\ndate_e_guess\r\nguess_delta\r\n2020-01-06\r\nNA\r\n2020-01-01\r\n5 days\r\n2020-07-16\r\n2020-07-16\r\n2020-07-16\r\n0 days\r\n2020-10-23\r\n2020-10-23\r\n2020-10-23\r\n0 days\r\n2020-08-08\r\n2020-08-08\r\n2020-08-08\r\n0 days\r\n2020-08-20\r\n2020-08-20\r\n2020-08-20\r\n0 days\r\n2020-10-10\r\n2020-10-10\r\n2020-10-10\r\n0 days\r\n2020-11-30\r\nNA\r\n2020-11-29\r\n1 days\r\n2020-10-20\r\nNA\r\n2020-10-23\r\n-3 days\r\n2020-07-29\r\nNA\r\n2020-07-29\r\n0 days\r\n2020-09-18\r\nNA\r\n2020-09-21\r\n-3 days\r\n\r\nLooking at the distribution of errors in the guesses we see that there is little systemic error. if we are worried about individual observations then bringing in the standard deviation would be needed but looking at aggregate data requires less precision at the individual level.\r\n\r\n\r\nbind_cols(\r\ndat_full %>% select(date_e),\r\ndat_guess %>% select(date_e, date_e_guess) %>% rename(date_e_missing := date_e)\r\n)%>% \r\n  filter(is.na(date_e_missing)) %>% \r\n  mutate(guess_delta = date_e - date_e_guess) %>% \r\n  count(guess_delta) %>%\r\n  ggplot(aes(x = guess_delta, y = n)) + geom_col(fill = \"light yellow\", alpha = 0.5, color = \"black\") + geom_vline(xintercept = 0, color = \"Black\", size = 1.5) +\r\n  labs(y = \"\", x = \"\", title = \"Distribution of Errors in Predicted Dates.\")\r\n\r\n\r\n\r\n\r\nCompare Plot\r\nNow we can see that predicting the missing dates in aggregate looks much better then just using the dates without imputation.\r\n\r\n\r\nbind_rows(\r\n  dat_full %>%\r\n    mutate_at(vars(matches(\"date\")), as.Date) %>% \r\n    select(matches(\"date\")) %>% \r\n    pivot_longer(.,cols = colnames(.)) %>% \r\n    mutate(full = \"full\") \r\n  ,\r\n  dat_guess %>% select(starts_with(\"date_e\")) %>%\r\n    pivot_longer(., cols = colnames(.)) %>%\r\n    mutate(full = \"missing\") \r\n) %>% \r\n  mutate(type = paste0(name,\"_\", full)) %>%\r\n  \r\n  count(type, value, sort = T) %>%# view()\r\n  filter(!is.na(value)) %>%\r\n  filter(grepl('date_e', type) ) %>% \r\n  ggplot(aes(x = value, y= n, color = type)) + geom_line() +\r\n  labs(title =\"Comparison of full timeseries, missing and imputed timeseries\", y = \"Number of observations\", x= \"Date\", color = \"\") +\r\n    theme(legend.position=\"bottom\")\r\n\r\n\r\n\r\n\r\n\r\n\r\ndat_comb <- \r\nbind_rows(\r\n  dat_full %>%\r\n    select(starts_with(\"date_e\")) %>% \r\n    pivot_longer(.,cols = colnames(.)) %>% \r\n    mutate(full = \"full\") \r\n  ,\r\n  dat_guess %>% select(starts_with(\"date_e\")) %>%\r\n    pivot_longer(., cols = colnames(.)) %>%\r\n    mutate(full = \"missing\") \r\n) %>% \r\n  mutate(type = paste0(name,\"_\", full)) %>% \r\n  count(type, value, sort = T) %>% \r\n  filter(!is.na(value)) %>% \r\n  pivot_wider(names_from = type, values_from = n) %>% \r\n  mutate(error_in_counts = date_e_full- date_e_guess_missing) %>%\r\n  mutate(error_in_counts_percent = error_in_counts/date_e_full)\r\n\r\n\r\ndat_comb$error_in_counts %>% quantile(probs = c(0.1,0.25,0.5,0.75,0.90), na.rm = TRUE)\r\n\r\n\r\n10% 25% 50% 75% 90% \r\n -6  -3   0   3   8 \r\n\r\np1 <-\r\ndat_comb %>%\r\n  ggplot(aes(x = value, y = error_in_counts)) + geom_line() +\r\n  labs(y =\"Error between Actual counts and predicted counts\", x = \"Date\", title = \"Errors Look Random Which is Good.\")\r\np2 <-\r\ndat_comb %>% \r\n  ggplot(aes(x = error_in_counts)) + \r\n  geom_density(fill = \"yellow\", color = \"black\", alpha = 0.15) + \r\n  geom_vline(xintercept = 0 , color = \"Black\", size = 1.5) +\r\n  #geom_boxplot(fill = \"yellow\", color = \"black\", alpha = 0.15) + \r\n  #geom_violin(fill = \"yellow\", color = \"black\", alpha = 0.15) + \r\n  labs(y = \"Density\", title = \"Distribution Error in Count\", x = \"Count\")\r\n\r\n\r\nggarrange(p1, p2)\r\n\r\n\r\n\r\n\r\nConclusion\r\nImpute your Dates! … Please…\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2021-04-12T09:57:11-04:00",
    "input_file": "mice_dates_2021-04-09.utf8.md"
  },
  {
    "path": "posts/firstPost/",
    "title": "Untitled",
    "description": "A new article created using the Distill format.",
    "author": [
      {
        "name": "Nora Jones",
        "url": "https://example.com/norajones"
      }
    ],
    "date": "2021-03-03",
    "categories": [],
    "contents": "\r\nDistill is a publication format for scientific and technical writing, native to the web.\r\nLearn more about using Distill for R Markdown at https://rstudio.github.io/distill.\r\n\r\n\r\n{\"x\":{\"data\":[{\"x\":[3.5,3,3.2,3.1,3.6,3.9,3.4,3.4,2.9,3.1,3.7,3.4,3,3,4,4.4,3.9,3.5,3.8,3.8,3.4,3.7,3.6,3.3,3.4,3,3.4,3.5,3.4,3.2,3.1,3.4,4.1,4.2,3.1,3.2,3.5,3.6,3,3.4,3.5,2.3,3.2,3.5,3.8,3,3.8,3.2,3.7,3.3],\"y\":[5.1,4.9,4.7,4.6,5,5.4,4.6,5,4.4,4.9,5.4,4.8,4.8,4.3,5.8,5.7,5.4,5.1,5.7,5.1,5.4,5.1,4.6,5.1,4.8,5,5,5.2,5.2,4.7,4.8,5.4,5.2,5.5,4.9,5,5.5,4.9,4.4,5.1,5,4.5,4.4,5,5.1,4.8,5.1,4.6,5.3,5],\"text\":[\"Sepal.Width: 3.5<br />Sepal.Length: 5.1<br />Species: setosa\",\"Sepal.Width: 3.0<br />Sepal.Length: 4.9<br />Species: setosa\",\"Sepal.Width: 3.2<br />Sepal.Length: 4.7<br />Species: setosa\",\"Sepal.Width: 3.1<br />Sepal.Length: 4.6<br />Species: setosa\",\"Sepal.Width: 3.6<br />Sepal.Length: 5.0<br />Species: setosa\",\"Sepal.Width: 3.9<br />Sepal.Length: 5.4<br />Species: setosa\",\"Sepal.Width: 3.4<br />Sepal.Length: 4.6<br />Species: setosa\",\"Sepal.Width: 3.4<br />Sepal.Length: 5.0<br />Species: setosa\",\"Sepal.Width: 2.9<br />Sepal.Length: 4.4<br />Species: setosa\",\"Sepal.Width: 3.1<br />Sepal.Length: 4.9<br />Species: setosa\",\"Sepal.Width: 3.7<br />Sepal.Length: 5.4<br />Species: setosa\",\"Sepal.Width: 3.4<br />Sepal.Length: 4.8<br />Species: setosa\",\"Sepal.Width: 3.0<br />Sepal.Length: 4.8<br />Species: setosa\",\"Sepal.Width: 3.0<br />Sepal.Length: 4.3<br />Species: setosa\",\"Sepal.Width: 4.0<br />Sepal.Length: 5.8<br />Species: setosa\",\"Sepal.Width: 4.4<br />Sepal.Length: 5.7<br />Species: setosa\",\"Sepal.Width: 3.9<br />Sepal.Length: 5.4<br />Species: setosa\",\"Sepal.Width: 3.5<br />Sepal.Length: 5.1<br />Species: setosa\",\"Sepal.Width: 3.8<br />Sepal.Length: 5.7<br />Species: setosa\",\"Sepal.Width: 3.8<br />Sepal.Length: 5.1<br />Species: setosa\",\"Sepal.Width: 3.4<br />Sepal.Length: 5.4<br />Species: setosa\",\"Sepal.Width: 3.7<br />Sepal.Length: 5.1<br />Species: setosa\",\"Sepal.Width: 3.6<br />Sepal.Length: 4.6<br />Species: setosa\",\"Sepal.Width: 3.3<br />Sepal.Length: 5.1<br />Species: setosa\",\"Sepal.Width: 3.4<br />Sepal.Length: 4.8<br />Species: setosa\",\"Sepal.Width: 3.0<br />Sepal.Length: 5.0<br />Species: setosa\",\"Sepal.Width: 3.4<br />Sepal.Length: 5.0<br />Species: setosa\",\"Sepal.Width: 3.5<br />Sepal.Length: 5.2<br />Species: setosa\",\"Sepal.Width: 3.4<br />Sepal.Length: 5.2<br />Species: setosa\",\"Sepal.Width: 3.2<br />Sepal.Length: 4.7<br />Species: setosa\",\"Sepal.Width: 3.1<br />Sepal.Length: 4.8<br />Species: setosa\",\"Sepal.Width: 3.4<br />Sepal.Length: 5.4<br />Species: setosa\",\"Sepal.Width: 4.1<br />Sepal.Length: 5.2<br />Species: setosa\",\"Sepal.Width: 4.2<br />Sepal.Length: 5.5<br />Species: setosa\",\"Sepal.Width: 3.1<br />Sepal.Length: 4.9<br />Species: setosa\",\"Sepal.Width: 3.2<br />Sepal.Length: 5.0<br />Species: setosa\",\"Sepal.Width: 3.5<br />Sepal.Length: 5.5<br />Species: setosa\",\"Sepal.Width: 3.6<br />Sepal.Length: 4.9<br />Species: setosa\",\"Sepal.Width: 3.0<br />Sepal.Length: 4.4<br />Species: setosa\",\"Sepal.Width: 3.4<br />Sepal.Length: 5.1<br />Species: setosa\",\"Sepal.Width: 3.5<br />Sepal.Length: 5.0<br />Species: setosa\",\"Sepal.Width: 2.3<br />Sepal.Length: 4.5<br />Species: setosa\",\"Sepal.Width: 3.2<br />Sepal.Length: 4.4<br />Species: setosa\",\"Sepal.Width: 3.5<br />Sepal.Length: 5.0<br />Species: setosa\",\"Sepal.Width: 3.8<br />Sepal.Length: 5.1<br />Species: setosa\",\"Sepal.Width: 3.0<br />Sepal.Length: 4.8<br />Species: setosa\",\"Sepal.Width: 3.8<br />Sepal.Length: 5.1<br />Species: setosa\",\"Sepal.Width: 3.2<br />Sepal.Length: 4.6<br />Species: setosa\",\"Sepal.Width: 3.7<br />Sepal.Length: 5.3<br />Species: setosa\",\"Sepal.Width: 3.3<br />Sepal.Length: 5.0<br />Species: setosa\"],\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(248,118,109,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(248,118,109,1)\"}},\"hoveron\":\"points\",\"name\":\"setosa\",\"legendgroup\":\"setosa\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[3.2,3.2,3.1,2.3,2.8,2.8,3.3,2.4,2.9,2.7,2,3,2.2,2.9,2.9,3.1,3,2.7,2.2,2.5,3.2,2.8,2.5,2.8,2.9,3,2.8,3,2.9,2.6,2.4,2.4,2.7,2.7,3,3.4,3.1,2.3,3,2.5,2.6,3,2.6,2.3,2.7,3,2.9,2.9,2.5,2.8],\"y\":[7,6.4,6.9,5.5,6.5,5.7,6.3,4.9,6.6,5.2,5,5.9,6,6.1,5.6,6.7,5.6,5.8,6.2,5.6,5.9,6.1,6.3,6.1,6.4,6.6,6.8,6.7,6,5.7,5.5,5.5,5.8,6,5.4,6,6.7,6.3,5.6,5.5,5.5,6.1,5.8,5,5.6,5.7,5.7,6.2,5.1,5.7],\"text\":[\"Sepal.Width: 3.2<br />Sepal.Length: 7.0<br />Species: versicolor\",\"Sepal.Width: 3.2<br />Sepal.Length: 6.4<br />Species: versicolor\",\"Sepal.Width: 3.1<br />Sepal.Length: 6.9<br />Species: versicolor\",\"Sepal.Width: 2.3<br />Sepal.Length: 5.5<br />Species: versicolor\",\"Sepal.Width: 2.8<br />Sepal.Length: 6.5<br />Species: versicolor\",\"Sepal.Width: 2.8<br />Sepal.Length: 5.7<br />Species: versicolor\",\"Sepal.Width: 3.3<br />Sepal.Length: 6.3<br />Species: versicolor\",\"Sepal.Width: 2.4<br />Sepal.Length: 4.9<br />Species: versicolor\",\"Sepal.Width: 2.9<br />Sepal.Length: 6.6<br />Species: versicolor\",\"Sepal.Width: 2.7<br />Sepal.Length: 5.2<br />Species: versicolor\",\"Sepal.Width: 2.0<br />Sepal.Length: 5.0<br />Species: versicolor\",\"Sepal.Width: 3.0<br />Sepal.Length: 5.9<br />Species: versicolor\",\"Sepal.Width: 2.2<br />Sepal.Length: 6.0<br />Species: versicolor\",\"Sepal.Width: 2.9<br />Sepal.Length: 6.1<br />Species: versicolor\",\"Sepal.Width: 2.9<br />Sepal.Length: 5.6<br />Species: versicolor\",\"Sepal.Width: 3.1<br />Sepal.Length: 6.7<br />Species: versicolor\",\"Sepal.Width: 3.0<br />Sepal.Length: 5.6<br />Species: versicolor\",\"Sepal.Width: 2.7<br />Sepal.Length: 5.8<br />Species: versicolor\",\"Sepal.Width: 2.2<br />Sepal.Length: 6.2<br />Species: versicolor\",\"Sepal.Width: 2.5<br />Sepal.Length: 5.6<br />Species: versicolor\",\"Sepal.Width: 3.2<br />Sepal.Length: 5.9<br />Species: versicolor\",\"Sepal.Width: 2.8<br />Sepal.Length: 6.1<br />Species: versicolor\",\"Sepal.Width: 2.5<br />Sepal.Length: 6.3<br />Species: versicolor\",\"Sepal.Width: 2.8<br />Sepal.Length: 6.1<br />Species: versicolor\",\"Sepal.Width: 2.9<br />Sepal.Length: 6.4<br />Species: versicolor\",\"Sepal.Width: 3.0<br />Sepal.Length: 6.6<br />Species: versicolor\",\"Sepal.Width: 2.8<br />Sepal.Length: 6.8<br />Species: versicolor\",\"Sepal.Width: 3.0<br />Sepal.Length: 6.7<br />Species: versicolor\",\"Sepal.Width: 2.9<br />Sepal.Length: 6.0<br />Species: versicolor\",\"Sepal.Width: 2.6<br />Sepal.Length: 5.7<br />Species: versicolor\",\"Sepal.Width: 2.4<br />Sepal.Length: 5.5<br />Species: versicolor\",\"Sepal.Width: 2.4<br />Sepal.Length: 5.5<br />Species: versicolor\",\"Sepal.Width: 2.7<br />Sepal.Length: 5.8<br />Species: versicolor\",\"Sepal.Width: 2.7<br />Sepal.Length: 6.0<br />Species: versicolor\",\"Sepal.Width: 3.0<br />Sepal.Length: 5.4<br />Species: versicolor\",\"Sepal.Width: 3.4<br />Sepal.Length: 6.0<br />Species: versicolor\",\"Sepal.Width: 3.1<br />Sepal.Length: 6.7<br />Species: versicolor\",\"Sepal.Width: 2.3<br />Sepal.Length: 6.3<br />Species: versicolor\",\"Sepal.Width: 3.0<br />Sepal.Length: 5.6<br />Species: versicolor\",\"Sepal.Width: 2.5<br />Sepal.Length: 5.5<br />Species: versicolor\",\"Sepal.Width: 2.6<br />Sepal.Length: 5.5<br />Species: versicolor\",\"Sepal.Width: 3.0<br />Sepal.Length: 6.1<br />Species: versicolor\",\"Sepal.Width: 2.6<br />Sepal.Length: 5.8<br />Species: versicolor\",\"Sepal.Width: 2.3<br />Sepal.Length: 5.0<br />Species: versicolor\",\"Sepal.Width: 2.7<br />Sepal.Length: 5.6<br />Species: versicolor\",\"Sepal.Width: 3.0<br />Sepal.Length: 5.7<br />Species: versicolor\",\"Sepal.Width: 2.9<br />Sepal.Length: 5.7<br />Species: versicolor\",\"Sepal.Width: 2.9<br />Sepal.Length: 6.2<br />Species: versicolor\",\"Sepal.Width: 2.5<br />Sepal.Length: 5.1<br />Species: versicolor\",\"Sepal.Width: 2.8<br />Sepal.Length: 5.7<br />Species: versicolor\"],\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,186,56,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(0,186,56,1)\"}},\"hoveron\":\"points\",\"name\":\"versicolor\",\"legendgroup\":\"versicolor\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[3.3,2.7,3,2.9,3,3,2.5,2.9,2.5,3.6,3.2,2.7,3,2.5,2.8,3.2,3,3.8,2.6,2.2,3.2,2.8,2.8,2.7,3.3,3.2,2.8,3,2.8,3,2.8,3.8,2.8,2.8,2.6,3,3.4,3.1,3,3.1,3.1,3.1,2.7,3.2,3.3,3,2.5,3,3.4,3],\"y\":[6.3,5.8,7.1,6.3,6.5,7.6,4.9,7.3,6.7,7.2,6.5,6.4,6.8,5.7,5.8,6.4,6.5,7.7,7.7,6,6.9,5.6,7.7,6.3,6.7,7.2,6.2,6.1,6.4,7.2,7.4,7.9,6.4,6.3,6.1,7.7,6.3,6.4,6,6.9,6.7,6.9,5.8,6.8,6.7,6.7,6.3,6.5,6.2,5.9],\"text\":[\"Sepal.Width: 3.3<br />Sepal.Length: 6.3<br />Species: virginica\",\"Sepal.Width: 2.7<br />Sepal.Length: 5.8<br />Species: virginica\",\"Sepal.Width: 3.0<br />Sepal.Length: 7.1<br />Species: virginica\",\"Sepal.Width: 2.9<br />Sepal.Length: 6.3<br />Species: virginica\",\"Sepal.Width: 3.0<br />Sepal.Length: 6.5<br />Species: virginica\",\"Sepal.Width: 3.0<br />Sepal.Length: 7.6<br />Species: virginica\",\"Sepal.Width: 2.5<br />Sepal.Length: 4.9<br />Species: virginica\",\"Sepal.Width: 2.9<br />Sepal.Length: 7.3<br />Species: virginica\",\"Sepal.Width: 2.5<br />Sepal.Length: 6.7<br />Species: virginica\",\"Sepal.Width: 3.6<br />Sepal.Length: 7.2<br />Species: virginica\",\"Sepal.Width: 3.2<br />Sepal.Length: 6.5<br />Species: virginica\",\"Sepal.Width: 2.7<br />Sepal.Length: 6.4<br />Species: virginica\",\"Sepal.Width: 3.0<br />Sepal.Length: 6.8<br />Species: virginica\",\"Sepal.Width: 2.5<br />Sepal.Length: 5.7<br />Species: virginica\",\"Sepal.Width: 2.8<br />Sepal.Length: 5.8<br />Species: virginica\",\"Sepal.Width: 3.2<br />Sepal.Length: 6.4<br />Species: virginica\",\"Sepal.Width: 3.0<br />Sepal.Length: 6.5<br />Species: virginica\",\"Sepal.Width: 3.8<br />Sepal.Length: 7.7<br />Species: virginica\",\"Sepal.Width: 2.6<br />Sepal.Length: 7.7<br />Species: virginica\",\"Sepal.Width: 2.2<br />Sepal.Length: 6.0<br />Species: virginica\",\"Sepal.Width: 3.2<br />Sepal.Length: 6.9<br />Species: virginica\",\"Sepal.Width: 2.8<br />Sepal.Length: 5.6<br />Species: virginica\",\"Sepal.Width: 2.8<br />Sepal.Length: 7.7<br />Species: virginica\",\"Sepal.Width: 2.7<br />Sepal.Length: 6.3<br />Species: virginica\",\"Sepal.Width: 3.3<br />Sepal.Length: 6.7<br />Species: virginica\",\"Sepal.Width: 3.2<br />Sepal.Length: 7.2<br />Species: virginica\",\"Sepal.Width: 2.8<br />Sepal.Length: 6.2<br />Species: virginica\",\"Sepal.Width: 3.0<br />Sepal.Length: 6.1<br />Species: virginica\",\"Sepal.Width: 2.8<br />Sepal.Length: 6.4<br />Species: virginica\",\"Sepal.Width: 3.0<br />Sepal.Length: 7.2<br />Species: virginica\",\"Sepal.Width: 2.8<br />Sepal.Length: 7.4<br />Species: virginica\",\"Sepal.Width: 3.8<br />Sepal.Length: 7.9<br />Species: virginica\",\"Sepal.Width: 2.8<br />Sepal.Length: 6.4<br />Species: virginica\",\"Sepal.Width: 2.8<br />Sepal.Length: 6.3<br />Species: virginica\",\"Sepal.Width: 2.6<br />Sepal.Length: 6.1<br />Species: virginica\",\"Sepal.Width: 3.0<br />Sepal.Length: 7.7<br />Species: virginica\",\"Sepal.Width: 3.4<br />Sepal.Length: 6.3<br />Species: virginica\",\"Sepal.Width: 3.1<br />Sepal.Length: 6.4<br />Species: virginica\",\"Sepal.Width: 3.0<br />Sepal.Length: 6.0<br />Species: virginica\",\"Sepal.Width: 3.1<br />Sepal.Length: 6.9<br />Species: virginica\",\"Sepal.Width: 3.1<br />Sepal.Length: 6.7<br />Species: virginica\",\"Sepal.Width: 3.1<br />Sepal.Length: 6.9<br />Species: virginica\",\"Sepal.Width: 2.7<br />Sepal.Length: 5.8<br />Species: virginica\",\"Sepal.Width: 3.2<br />Sepal.Length: 6.8<br />Species: virginica\",\"Sepal.Width: 3.3<br />Sepal.Length: 6.7<br />Species: virginica\",\"Sepal.Width: 3.0<br />Sepal.Length: 6.7<br />Species: virginica\",\"Sepal.Width: 2.5<br />Sepal.Length: 6.3<br />Species: virginica\",\"Sepal.Width: 3.0<br />Sepal.Length: 6.5<br />Species: virginica\",\"Sepal.Width: 3.4<br />Sepal.Length: 6.2<br />Species: virginica\",\"Sepal.Width: 3.0<br />Sepal.Length: 5.9<br />Species: virginica\"],\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(97,156,255,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(97,156,255,1)\"}},\"hoveron\":\"points\",\"name\":\"virginica\",\"legendgroup\":\"virginica\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":27.8721461187215,\"r\":7.30593607305936,\"b\":41.8264840182648,\"l\":31.4155251141553},\"plot_bgcolor\":\"rgba(235,235,235,1)\",\"paper_bgcolor\":\"rgba(255,255,255,1)\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.6118721461187},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[1.88,4.52],\"tickmode\":\"array\",\"ticktext\":[\"2.0\",\"2.5\",\"3.0\",\"3.5\",\"4.0\",\"4.5\"],\"tickvals\":[2,2.5,3,3.5,4,4.5],\"categoryorder\":\"array\",\"categoryarray\":[\"2.0\",\"2.5\",\"3.0\",\"3.5\",\"4.0\",\"4.5\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.65296803652968,\"tickwidth\":0.66417600664176,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.689497716895},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(255,255,255,1)\",\"gridwidth\":0.66417600664176,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"Sepal.Width\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.6118721461187}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[4.12,8.08],\"tickmode\":\"array\",\"ticktext\":[\"5\",\"6\",\"7\",\"8\"],\"tickvals\":[5,6,7,8],\"categoryorder\":\"array\",\"categoryarray\":[\"5\",\"6\",\"7\",\"8\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.65296803652968,\"tickwidth\":0.66417600664176,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.689497716895},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(255,255,255,1)\",\"gridwidth\":0.66417600664176,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"Sepal.Length\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.6118721461187}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":true,\"legend\":{\"bgcolor\":\"rgba(255,255,255,1)\",\"bordercolor\":\"transparent\",\"borderwidth\":1.88976377952756,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.689497716895},\"y\":0.959399606299213},\"annotations\":[{\"text\":\"Species\",\"x\":1.02,\"y\":1,\"showarrow\":false,\"ax\":0,\"ay\":0,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.6118721461187},\"xref\":\"paper\",\"yref\":\"paper\",\"textangle\":-0,\"xanchor\":\"left\",\"yanchor\":\"bottom\",\"legendTitle\":true}],\"hovermode\":\"closest\",\"barmode\":\"relative\"},\"config\":{\"doubleClick\":\"reset\",\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"1f406e537ae5\":{\"x\":{},\"y\":{},\"colour\":{},\"type\":\"scatter\"}},\"cur_data\":\"1f406e537ae5\",\"visdat\":{\"1f406e537ae5\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.2,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2021-03-03T09:04:07-05:00",
    "input_file": "firstPost.utf8.md"
  },
  {
    "path": "posts/welcome/",
    "title": "Welcome to hswerdfe - data - dodo",
    "description": "Welcome to our new blog, hswerdfe - data - dodo. We hope you enjoy \nreading what we have to say!",
    "author": [
      {
        "name": "Nora Jones",
        "url": "https://example.com/norajones"
      }
    ],
    "date": "2021-03-03",
    "categories": [],
    "contents": "\r\nfirst level header\r\nsome text\r\nseconde level header\r\nmore text\r\npictures\r\n\r\n\r\n\r\nreferences\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2021-03-03T08:36:46-05:00",
    "input_file": {}
  },
  {
    "path": "posts/template/",
    "title": "POST TITLE",
    "description": "A new post by hswerdfe",
    "author": [
      {
        "name": "Howard Swerdfeger",
        "url": "https://hswerdfe.github.io/docs/"
      }
    ],
    "date": "2021-03-03",
    "categories": [],
    "contents": "\r\nimages\r\n\r\n\r\n\r\nload libraries\r\n\r\n\r\nlibrary(tidyverse)\r\nlibrary(plotly)\r\n\r\n\r\n\r\ndo other stuff\r\nthis is text describing what I am doing\r\n\r\n\r\np <- \r\n iris %>% \r\n  ggplot(aes(x = Sepal.Width, y = Sepal.Length, color = Species)) + geom_point()\r\n\r\nggplotly(p)\r\n\r\n\r\n\r\n{\"x\":{\"data\":[{\"x\":[3.5,3,3.2,3.1,3.6,3.9,3.4,3.4,2.9,3.1,3.7,3.4,3,3,4,4.4,3.9,3.5,3.8,3.8,3.4,3.7,3.6,3.3,3.4,3,3.4,3.5,3.4,3.2,3.1,3.4,4.1,4.2,3.1,3.2,3.5,3.6,3,3.4,3.5,2.3,3.2,3.5,3.8,3,3.8,3.2,3.7,3.3],\"y\":[5.1,4.9,4.7,4.6,5,5.4,4.6,5,4.4,4.9,5.4,4.8,4.8,4.3,5.8,5.7,5.4,5.1,5.7,5.1,5.4,5.1,4.6,5.1,4.8,5,5,5.2,5.2,4.7,4.8,5.4,5.2,5.5,4.9,5,5.5,4.9,4.4,5.1,5,4.5,4.4,5,5.1,4.8,5.1,4.6,5.3,5],\"text\":[\"Sepal.Width: 3.5<br />Sepal.Length: 5.1<br />Species: setosa\",\"Sepal.Width: 3.0<br />Sepal.Length: 4.9<br />Species: setosa\",\"Sepal.Width: 3.2<br />Sepal.Length: 4.7<br />Species: setosa\",\"Sepal.Width: 3.1<br />Sepal.Length: 4.6<br />Species: setosa\",\"Sepal.Width: 3.6<br />Sepal.Length: 5.0<br />Species: setosa\",\"Sepal.Width: 3.9<br />Sepal.Length: 5.4<br />Species: setosa\",\"Sepal.Width: 3.4<br />Sepal.Length: 4.6<br />Species: setosa\",\"Sepal.Width: 3.4<br />Sepal.Length: 5.0<br />Species: setosa\",\"Sepal.Width: 2.9<br />Sepal.Length: 4.4<br />Species: setosa\",\"Sepal.Width: 3.1<br />Sepal.Length: 4.9<br />Species: setosa\",\"Sepal.Width: 3.7<br />Sepal.Length: 5.4<br />Species: setosa\",\"Sepal.Width: 3.4<br />Sepal.Length: 4.8<br />Species: setosa\",\"Sepal.Width: 3.0<br />Sepal.Length: 4.8<br />Species: setosa\",\"Sepal.Width: 3.0<br />Sepal.Length: 4.3<br />Species: setosa\",\"Sepal.Width: 4.0<br />Sepal.Length: 5.8<br />Species: setosa\",\"Sepal.Width: 4.4<br />Sepal.Length: 5.7<br />Species: setosa\",\"Sepal.Width: 3.9<br />Sepal.Length: 5.4<br />Species: setosa\",\"Sepal.Width: 3.5<br />Sepal.Length: 5.1<br />Species: setosa\",\"Sepal.Width: 3.8<br />Sepal.Length: 5.7<br />Species: setosa\",\"Sepal.Width: 3.8<br />Sepal.Length: 5.1<br />Species: setosa\",\"Sepal.Width: 3.4<br />Sepal.Length: 5.4<br />Species: setosa\",\"Sepal.Width: 3.7<br />Sepal.Length: 5.1<br />Species: setosa\",\"Sepal.Width: 3.6<br />Sepal.Length: 4.6<br />Species: setosa\",\"Sepal.Width: 3.3<br />Sepal.Length: 5.1<br />Species: setosa\",\"Sepal.Width: 3.4<br />Sepal.Length: 4.8<br />Species: setosa\",\"Sepal.Width: 3.0<br />Sepal.Length: 5.0<br />Species: setosa\",\"Sepal.Width: 3.4<br />Sepal.Length: 5.0<br />Species: setosa\",\"Sepal.Width: 3.5<br />Sepal.Length: 5.2<br />Species: setosa\",\"Sepal.Width: 3.4<br />Sepal.Length: 5.2<br />Species: setosa\",\"Sepal.Width: 3.2<br />Sepal.Length: 4.7<br />Species: setosa\",\"Sepal.Width: 3.1<br />Sepal.Length: 4.8<br />Species: setosa\",\"Sepal.Width: 3.4<br />Sepal.Length: 5.4<br />Species: setosa\",\"Sepal.Width: 4.1<br />Sepal.Length: 5.2<br />Species: setosa\",\"Sepal.Width: 4.2<br />Sepal.Length: 5.5<br />Species: setosa\",\"Sepal.Width: 3.1<br />Sepal.Length: 4.9<br />Species: setosa\",\"Sepal.Width: 3.2<br />Sepal.Length: 5.0<br />Species: setosa\",\"Sepal.Width: 3.5<br />Sepal.Length: 5.5<br />Species: setosa\",\"Sepal.Width: 3.6<br />Sepal.Length: 4.9<br />Species: setosa\",\"Sepal.Width: 3.0<br />Sepal.Length: 4.4<br />Species: setosa\",\"Sepal.Width: 3.4<br />Sepal.Length: 5.1<br />Species: setosa\",\"Sepal.Width: 3.5<br />Sepal.Length: 5.0<br />Species: setosa\",\"Sepal.Width: 2.3<br />Sepal.Length: 4.5<br />Species: setosa\",\"Sepal.Width: 3.2<br />Sepal.Length: 4.4<br />Species: setosa\",\"Sepal.Width: 3.5<br />Sepal.Length: 5.0<br />Species: setosa\",\"Sepal.Width: 3.8<br />Sepal.Length: 5.1<br />Species: setosa\",\"Sepal.Width: 3.0<br />Sepal.Length: 4.8<br />Species: setosa\",\"Sepal.Width: 3.8<br />Sepal.Length: 5.1<br />Species: setosa\",\"Sepal.Width: 3.2<br />Sepal.Length: 4.6<br />Species: setosa\",\"Sepal.Width: 3.7<br />Sepal.Length: 5.3<br />Species: setosa\",\"Sepal.Width: 3.3<br />Sepal.Length: 5.0<br />Species: setosa\"],\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(248,118,109,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(248,118,109,1)\"}},\"hoveron\":\"points\",\"name\":\"setosa\",\"legendgroup\":\"setosa\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[3.2,3.2,3.1,2.3,2.8,2.8,3.3,2.4,2.9,2.7,2,3,2.2,2.9,2.9,3.1,3,2.7,2.2,2.5,3.2,2.8,2.5,2.8,2.9,3,2.8,3,2.9,2.6,2.4,2.4,2.7,2.7,3,3.4,3.1,2.3,3,2.5,2.6,3,2.6,2.3,2.7,3,2.9,2.9,2.5,2.8],\"y\":[7,6.4,6.9,5.5,6.5,5.7,6.3,4.9,6.6,5.2,5,5.9,6,6.1,5.6,6.7,5.6,5.8,6.2,5.6,5.9,6.1,6.3,6.1,6.4,6.6,6.8,6.7,6,5.7,5.5,5.5,5.8,6,5.4,6,6.7,6.3,5.6,5.5,5.5,6.1,5.8,5,5.6,5.7,5.7,6.2,5.1,5.7],\"text\":[\"Sepal.Width: 3.2<br />Sepal.Length: 7.0<br />Species: versicolor\",\"Sepal.Width: 3.2<br />Sepal.Length: 6.4<br />Species: versicolor\",\"Sepal.Width: 3.1<br />Sepal.Length: 6.9<br />Species: versicolor\",\"Sepal.Width: 2.3<br />Sepal.Length: 5.5<br />Species: versicolor\",\"Sepal.Width: 2.8<br />Sepal.Length: 6.5<br />Species: versicolor\",\"Sepal.Width: 2.8<br />Sepal.Length: 5.7<br />Species: versicolor\",\"Sepal.Width: 3.3<br />Sepal.Length: 6.3<br />Species: versicolor\",\"Sepal.Width: 2.4<br />Sepal.Length: 4.9<br />Species: versicolor\",\"Sepal.Width: 2.9<br />Sepal.Length: 6.6<br />Species: versicolor\",\"Sepal.Width: 2.7<br />Sepal.Length: 5.2<br />Species: versicolor\",\"Sepal.Width: 2.0<br />Sepal.Length: 5.0<br />Species: versicolor\",\"Sepal.Width: 3.0<br />Sepal.Length: 5.9<br />Species: versicolor\",\"Sepal.Width: 2.2<br />Sepal.Length: 6.0<br />Species: versicolor\",\"Sepal.Width: 2.9<br />Sepal.Length: 6.1<br />Species: versicolor\",\"Sepal.Width: 2.9<br />Sepal.Length: 5.6<br />Species: versicolor\",\"Sepal.Width: 3.1<br />Sepal.Length: 6.7<br />Species: versicolor\",\"Sepal.Width: 3.0<br />Sepal.Length: 5.6<br />Species: versicolor\",\"Sepal.Width: 2.7<br />Sepal.Length: 5.8<br />Species: versicolor\",\"Sepal.Width: 2.2<br />Sepal.Length: 6.2<br />Species: versicolor\",\"Sepal.Width: 2.5<br />Sepal.Length: 5.6<br />Species: versicolor\",\"Sepal.Width: 3.2<br />Sepal.Length: 5.9<br />Species: versicolor\",\"Sepal.Width: 2.8<br />Sepal.Length: 6.1<br />Species: versicolor\",\"Sepal.Width: 2.5<br />Sepal.Length: 6.3<br />Species: versicolor\",\"Sepal.Width: 2.8<br />Sepal.Length: 6.1<br />Species: versicolor\",\"Sepal.Width: 2.9<br />Sepal.Length: 6.4<br />Species: versicolor\",\"Sepal.Width: 3.0<br />Sepal.Length: 6.6<br />Species: versicolor\",\"Sepal.Width: 2.8<br />Sepal.Length: 6.8<br />Species: versicolor\",\"Sepal.Width: 3.0<br />Sepal.Length: 6.7<br />Species: versicolor\",\"Sepal.Width: 2.9<br />Sepal.Length: 6.0<br />Species: versicolor\",\"Sepal.Width: 2.6<br />Sepal.Length: 5.7<br />Species: versicolor\",\"Sepal.Width: 2.4<br />Sepal.Length: 5.5<br />Species: versicolor\",\"Sepal.Width: 2.4<br />Sepal.Length: 5.5<br />Species: versicolor\",\"Sepal.Width: 2.7<br />Sepal.Length: 5.8<br />Species: versicolor\",\"Sepal.Width: 2.7<br />Sepal.Length: 6.0<br />Species: versicolor\",\"Sepal.Width: 3.0<br />Sepal.Length: 5.4<br />Species: versicolor\",\"Sepal.Width: 3.4<br />Sepal.Length: 6.0<br />Species: versicolor\",\"Sepal.Width: 3.1<br />Sepal.Length: 6.7<br />Species: versicolor\",\"Sepal.Width: 2.3<br />Sepal.Length: 6.3<br />Species: versicolor\",\"Sepal.Width: 3.0<br />Sepal.Length: 5.6<br />Species: versicolor\",\"Sepal.Width: 2.5<br />Sepal.Length: 5.5<br />Species: versicolor\",\"Sepal.Width: 2.6<br />Sepal.Length: 5.5<br />Species: versicolor\",\"Sepal.Width: 3.0<br />Sepal.Length: 6.1<br />Species: versicolor\",\"Sepal.Width: 2.6<br />Sepal.Length: 5.8<br />Species: versicolor\",\"Sepal.Width: 2.3<br />Sepal.Length: 5.0<br />Species: versicolor\",\"Sepal.Width: 2.7<br />Sepal.Length: 5.6<br />Species: versicolor\",\"Sepal.Width: 3.0<br />Sepal.Length: 5.7<br />Species: versicolor\",\"Sepal.Width: 2.9<br />Sepal.Length: 5.7<br />Species: versicolor\",\"Sepal.Width: 2.9<br />Sepal.Length: 6.2<br />Species: versicolor\",\"Sepal.Width: 2.5<br />Sepal.Length: 5.1<br />Species: versicolor\",\"Sepal.Width: 2.8<br />Sepal.Length: 5.7<br />Species: versicolor\"],\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,186,56,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(0,186,56,1)\"}},\"hoveron\":\"points\",\"name\":\"versicolor\",\"legendgroup\":\"versicolor\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[3.3,2.7,3,2.9,3,3,2.5,2.9,2.5,3.6,3.2,2.7,3,2.5,2.8,3.2,3,3.8,2.6,2.2,3.2,2.8,2.8,2.7,3.3,3.2,2.8,3,2.8,3,2.8,3.8,2.8,2.8,2.6,3,3.4,3.1,3,3.1,3.1,3.1,2.7,3.2,3.3,3,2.5,3,3.4,3],\"y\":[6.3,5.8,7.1,6.3,6.5,7.6,4.9,7.3,6.7,7.2,6.5,6.4,6.8,5.7,5.8,6.4,6.5,7.7,7.7,6,6.9,5.6,7.7,6.3,6.7,7.2,6.2,6.1,6.4,7.2,7.4,7.9,6.4,6.3,6.1,7.7,6.3,6.4,6,6.9,6.7,6.9,5.8,6.8,6.7,6.7,6.3,6.5,6.2,5.9],\"text\":[\"Sepal.Width: 3.3<br />Sepal.Length: 6.3<br />Species: virginica\",\"Sepal.Width: 2.7<br />Sepal.Length: 5.8<br />Species: virginica\",\"Sepal.Width: 3.0<br />Sepal.Length: 7.1<br />Species: virginica\",\"Sepal.Width: 2.9<br />Sepal.Length: 6.3<br />Species: virginica\",\"Sepal.Width: 3.0<br />Sepal.Length: 6.5<br />Species: virginica\",\"Sepal.Width: 3.0<br />Sepal.Length: 7.6<br />Species: virginica\",\"Sepal.Width: 2.5<br />Sepal.Length: 4.9<br />Species: virginica\",\"Sepal.Width: 2.9<br />Sepal.Length: 7.3<br />Species: virginica\",\"Sepal.Width: 2.5<br />Sepal.Length: 6.7<br />Species: virginica\",\"Sepal.Width: 3.6<br />Sepal.Length: 7.2<br />Species: virginica\",\"Sepal.Width: 3.2<br />Sepal.Length: 6.5<br />Species: virginica\",\"Sepal.Width: 2.7<br />Sepal.Length: 6.4<br />Species: virginica\",\"Sepal.Width: 3.0<br />Sepal.Length: 6.8<br />Species: virginica\",\"Sepal.Width: 2.5<br />Sepal.Length: 5.7<br />Species: virginica\",\"Sepal.Width: 2.8<br />Sepal.Length: 5.8<br />Species: virginica\",\"Sepal.Width: 3.2<br />Sepal.Length: 6.4<br />Species: virginica\",\"Sepal.Width: 3.0<br />Sepal.Length: 6.5<br />Species: virginica\",\"Sepal.Width: 3.8<br />Sepal.Length: 7.7<br />Species: virginica\",\"Sepal.Width: 2.6<br />Sepal.Length: 7.7<br />Species: virginica\",\"Sepal.Width: 2.2<br />Sepal.Length: 6.0<br />Species: virginica\",\"Sepal.Width: 3.2<br />Sepal.Length: 6.9<br />Species: virginica\",\"Sepal.Width: 2.8<br />Sepal.Length: 5.6<br />Species: virginica\",\"Sepal.Width: 2.8<br />Sepal.Length: 7.7<br />Species: virginica\",\"Sepal.Width: 2.7<br />Sepal.Length: 6.3<br />Species: virginica\",\"Sepal.Width: 3.3<br />Sepal.Length: 6.7<br />Species: virginica\",\"Sepal.Width: 3.2<br />Sepal.Length: 7.2<br />Species: virginica\",\"Sepal.Width: 2.8<br />Sepal.Length: 6.2<br />Species: virginica\",\"Sepal.Width: 3.0<br />Sepal.Length: 6.1<br />Species: virginica\",\"Sepal.Width: 2.8<br />Sepal.Length: 6.4<br />Species: virginica\",\"Sepal.Width: 3.0<br />Sepal.Length: 7.2<br />Species: virginica\",\"Sepal.Width: 2.8<br />Sepal.Length: 7.4<br />Species: virginica\",\"Sepal.Width: 3.8<br />Sepal.Length: 7.9<br />Species: virginica\",\"Sepal.Width: 2.8<br />Sepal.Length: 6.4<br />Species: virginica\",\"Sepal.Width: 2.8<br />Sepal.Length: 6.3<br />Species: virginica\",\"Sepal.Width: 2.6<br />Sepal.Length: 6.1<br />Species: virginica\",\"Sepal.Width: 3.0<br />Sepal.Length: 7.7<br />Species: virginica\",\"Sepal.Width: 3.4<br />Sepal.Length: 6.3<br />Species: virginica\",\"Sepal.Width: 3.1<br />Sepal.Length: 6.4<br />Species: virginica\",\"Sepal.Width: 3.0<br />Sepal.Length: 6.0<br />Species: virginica\",\"Sepal.Width: 3.1<br />Sepal.Length: 6.9<br />Species: virginica\",\"Sepal.Width: 3.1<br />Sepal.Length: 6.7<br />Species: virginica\",\"Sepal.Width: 3.1<br />Sepal.Length: 6.9<br />Species: virginica\",\"Sepal.Width: 2.7<br />Sepal.Length: 5.8<br />Species: virginica\",\"Sepal.Width: 3.2<br />Sepal.Length: 6.8<br />Species: virginica\",\"Sepal.Width: 3.3<br />Sepal.Length: 6.7<br />Species: virginica\",\"Sepal.Width: 3.0<br />Sepal.Length: 6.7<br />Species: virginica\",\"Sepal.Width: 2.5<br />Sepal.Length: 6.3<br />Species: virginica\",\"Sepal.Width: 3.0<br />Sepal.Length: 6.5<br />Species: virginica\",\"Sepal.Width: 3.4<br />Sepal.Length: 6.2<br />Species: virginica\",\"Sepal.Width: 3.0<br />Sepal.Length: 5.9<br />Species: virginica\"],\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(97,156,255,1)\",\"opacity\":1,\"size\":5.66929133858268,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(97,156,255,1)\"}},\"hoveron\":\"points\",\"name\":\"virginica\",\"legendgroup\":\"virginica\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":27.8721461187215,\"r\":7.30593607305936,\"b\":41.8264840182648,\"l\":31.4155251141553},\"plot_bgcolor\":\"rgba(235,235,235,1)\",\"paper_bgcolor\":\"rgba(255,255,255,1)\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.6118721461187},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[1.88,4.52],\"tickmode\":\"array\",\"ticktext\":[\"2.0\",\"2.5\",\"3.0\",\"3.5\",\"4.0\",\"4.5\"],\"tickvals\":[2,2.5,3,3.5,4,4.5],\"categoryorder\":\"array\",\"categoryarray\":[\"2.0\",\"2.5\",\"3.0\",\"3.5\",\"4.0\",\"4.5\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.65296803652968,\"tickwidth\":0.66417600664176,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.689497716895},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(255,255,255,1)\",\"gridwidth\":0.66417600664176,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"Sepal.Width\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.6118721461187}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[4.12,8.08],\"tickmode\":\"array\",\"ticktext\":[\"5\",\"6\",\"7\",\"8\"],\"tickvals\":[5,6,7,8],\"categoryorder\":\"array\",\"categoryarray\":[\"5\",\"6\",\"7\",\"8\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.65296803652968,\"tickwidth\":0.66417600664176,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.689497716895},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(255,255,255,1)\",\"gridwidth\":0.66417600664176,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"Sepal.Length\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.6118721461187}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":true,\"legend\":{\"bgcolor\":\"rgba(255,255,255,1)\",\"bordercolor\":\"transparent\",\"borderwidth\":1.88976377952756,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.689497716895},\"y\":0.959399606299213},\"annotations\":[{\"text\":\"Species\",\"x\":1.02,\"y\":1,\"showarrow\":false,\"ax\":0,\"ay\":0,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.6118721461187},\"xref\":\"paper\",\"yref\":\"paper\",\"textangle\":-0,\"xanchor\":\"left\",\"yanchor\":\"bottom\",\"legendTitle\":true}],\"hovermode\":\"closest\",\"barmode\":\"relative\"},\"config\":{\"doubleClick\":\"reset\",\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"48d891d5321\":{\"x\":{},\"y\":{},\"colour\":{},\"type\":\"scatter\"}},\"cur_data\":\"48d891d5321\",\"visdat\":{\"48d891d5321\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.2,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2021-03-03T10:14:32-05:00",
    "input_file": "template.utf8.md"
  }
]
